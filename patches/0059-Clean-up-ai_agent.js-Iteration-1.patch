From 442008b312e4e090ad3e776fd324b0bf9ca91aa8 Mon Sep 17 00:00:00 2001
From: Den <2119348+dzianisv@users.noreply.github.com>
Date: Sun, 27 Jul 2025 21:09:31 +0300
Subject: [PATCH 059/107] Clean up ai_agent.js Iteration #1

---
 chrome/browser/resources/vibe/.gitignore      |  1 +
 chrome/browser/resources/vibe/ai_agent.js     | 26 ++++++++++++-------
 .../resources/vibe/ai_tools.extension.js      |  4 +--
 3 files changed, 20 insertions(+), 11 deletions(-)

diff --git a/chrome/browser/resources/vibe/.gitignore b/chrome/browser/resources/vibe/.gitignore
index 8c5d114cc8..07c005b2f4 100644
--- a/chrome/browser/resources/vibe/.gitignore
+++ b/chrome/browser/resources/vibe/.gitignore
@@ -1,3 +1,4 @@
+.test
 tmp
 dist
 node_modules
diff --git a/chrome/browser/resources/vibe/ai_agent.js b/chrome/browser/resources/vibe/ai_agent.js
index 0391adafdb..7bd7cae0f0 100644
--- a/chrome/browser/resources/vibe/ai_agent.js
+++ b/chrome/browser/resources/vibe/ai_agent.js
@@ -28,12 +28,8 @@ export class VibeLangchainAgent {
   constructor() {
     this.tools = extensionBrowserTools;
     
-    this.memory = new ConversationSummaryBufferMemory({
-        llm: llm, // Use same model for intelligent summarization
-        maxTokenLimit: 4000, // Token threshold for summarization
-        returnMessages: true,
-        memoryKey: "chat_history"
-    });
+    // Memory will be initialized after LLM creation in processUserRequest
+    this.memory = null;
     // Provider management for world-class tool call handling
     this.provider = null;
     this.providerConfig = null;
@@ -46,6 +42,7 @@ export class VibeLangchainAgent {
   }
 
   clearHistory() {
+    this.messages = [];
     return this.messages;
   }
 
@@ -184,7 +181,18 @@ export class VibeLangchainAgent {
       pattern: "Thought (text) → Action (function call) → Observation (result)"
     }, null, 2));
 
-    this.memory.llm = llm;
+    // Initialize memory with the created LLM
+    if (!this.memory) {
+      this.memory = new ConversationSummaryBufferMemory({
+        llm: llm,
+        maxTokenLimit: 4000,
+        returnMessages: true,
+        memoryKey: "chat_history"
+      });
+    } else {
+      this.memory.llm = llm;
+    }
+    
     return { llm, llmWithTools };
   }
 
@@ -280,7 +288,7 @@ If asked to find a product, check amazon.com, walmart.com, aliexpress.com, temu.
       // Send thinking update to UI
       this.#sendToolUpdate(tabId, 'thinking', `Processing (iteration ${iteration}/${maxIterations})...`);      
       // Query LLM
-      const result = await llmWithTools.invoke(messages);
+      const result = await llmWithTools.invoke(this.messages);
       
       // Send reasoning update if AI provided text response
       if (result.content && result.content.trim()) {
@@ -358,7 +366,7 @@ If asked to find a product, check amazon.com, walmart.com, aliexpress.com, temu.
           }
         }
       } else {
-        this.messages.push(new AIMessage(result.content));``
+        this.messages.push(new AIMessage(result.content));
       }
       
       // Reset consecutive failures on successful iteration
diff --git a/chrome/browser/resources/vibe/ai_tools.extension.js b/chrome/browser/resources/vibe/ai_tools.extension.js
index 1f679e3a6e..4f2d9fcfd0 100644
--- a/chrome/browser/resources/vibe/ai_tools.extension.js
+++ b/chrome/browser/resources/vibe/ai_tools.extension.js
@@ -538,8 +538,8 @@ class NavigateToURLTool extends BrowserTool {
   
   async call({ tabId, url, timeoutMs = 45000 }) {
     try {
-      // TODO: Validate URL security first
-      // validateUrlSecurity(url);
+      // Validate URL security first
+      validateUrlSecurity(url);
       // First validate that the tab exists
       await chrome.tabs.get(tabId);
       // Navigate to the URL
-- 
2.50.0

